{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifItem.js","Components/GifGrid.js","hooks/useGetGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","valueInput","setvalueInput","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getFifs","a","url","encodeURI","fetch","response","json","data","gifs","map","image","id","tittle","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loanding","state","setstate","useEffect","then","imgs","useGetGif","gif","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAQ,OAAGP,GAAH,mBAAiBO,OACxCN,EAAc,MAMlB,SACG,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBW,SAACP,GACfF,EAAcE,EAAEQ,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEdC,EAFc,yDAE0CC,UAAUR,GAFpD,sDAGGS,MAAMF,GAHT,cAGdG,EAHc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAW,IAAD,EAC7B,MAAO,CACHC,GAAID,EAAMC,GACVC,OAAQF,EAAMG,MACdX,IAAG,UAAEQ,EAAMI,cAAR,aAAE,EAAcC,iBAAiBb,QAXxB,kBAeZM,GAfY,4CAAH,sDCmBNQ,EAjBC,SAAC,GAAoB,EAAnBL,GAAoB,IAAjBC,EAAgB,EAAhBA,OAAOV,EAAS,EAATA,IAGxB,OACI,mCACA,sBAAKe,UAAU,OAAf,UAEI,4BACKL,IAEL,qBAAKM,IAAKhB,EAAKiB,IAAKP,UCsBjBQ,EA9BC,SAAC,GAAkB,IAE/B,ECHqB,SAACzB,GAE1B,MAA0BR,mBAAS,CAC/BoB,KAAK,GACLc,UAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQL,GACR8B,MAAK,SAAAC,GAEGH,EAAS,CACLhB,KAAKmB,EACLL,UAAS,SAKtB,CAAC1B,IAEG2B,EDlBoBK,CAFO,EAAfhC,UAERY,EAAP,EAAOA,KAAKc,EAAZ,EAAYA,SAQZ,OACI,qCACEA,GAAU,gDACR,6BACI,6BAEQd,EAAKE,KAAI,SAACmB,GACV,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIjB,eESlBkB,EA3BM,WAGjB,MAAoC1C,mBAAS,CAAC,YAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,gDAGI,cAAC,EAAD,CAAaA,cAAeA,IAChC,6BAEO4C,EAAWrB,KAAI,SAACd,EAASoC,GACpB,OAAO,cAAC,EAAD,CAEPpC,SAAUA,GADLoC,QAOjB,2B,MCrBZC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.50a4a1bc.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n\r\n    const [valueInput, setvalueInput] = useState('')\r\n    \r\n    const handleInput=(e)=>{\r\n        setvalueInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (valueInput.trim().length>2) {\r\n            setcategories( category=>[valueInput,...category]);\r\n            setvalueInput('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input\r\n           type='text'\r\n           value={valueInput}\r\n           onChange={handleInput}\r\n           >\r\n           </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","export const  getFifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=5&q=${encodeURI(category) }&api_key=1D5kf85DPY456bhooYQleDSgookTalqx`;\r\n    const response = await fetch(url);\r\n\r\n    const { data } = await response.json();\r\n    // console.log(data)\r\n    const gifs = data.map((image) => {\r\n        return {\r\n            id: image.id,\r\n            tittle: image.title,\r\n            url: image.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n     return gifs;\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst GifItem = ({id,tittle,url}) => {\r\n\r\n    // console.log('Datos de los gif',id,tittle,url)\r\n    return (\r\n        <>\r\n        <div className='card'>\r\n\r\n            <p>\r\n                {tittle}\r\n            </p>\r\n            <img src={url} alt={tittle}/>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useGetGif } from '../hooks/useGetGif';\r\nimport GifItem from './GifItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data,loanding}= useGetGif(category);\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getFifs(category).then(setimages);\r\n    // }, [category]);\r\n\r\n    return (\r\n        <>\r\n         {loanding&&<div>Loanding.....</div>}\r\n            <ol>\r\n                <li>\r\n                    {\r\n                        data.map((gif)=>{\r\n                        return <GifItem \r\n                        key={gif.id}\r\n                        {...gif}\r\n                        />\r\n         \r\n                        })\r\n                    }\r\n                </li>\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getFifs } from '../Helpers/getGifs';\r\n\r\nexport const useGetGif = (category) => {\r\n  \r\nconst [state, setstate] = useState({\r\n    data:[],\r\n    loanding:true\r\n})\r\n\r\nuseEffect(() => {\r\n\r\n    getFifs(category).\r\n    then(imgs=>{\r\n        // setTimeout(() => {\r\n            setstate({\r\n                data:imgs,\r\n                loanding:false\r\n            })\r\n        // }, 3000);\r\n    })\r\n    \r\n}, [category])\r\n\r\nreturn state\r\n\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport AddCategory from './Components/AddCategory'\r\nimport GifGrid from './Components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setcategories] = useState(['kyoukai'])   \r\n\r\n    return (\r\n        <>\r\n            <h2>\r\n                Gif Aplication\r\n            </h2>\r\n                <AddCategory setcategories={setcategories}/>\r\n            <ol>\r\n                {\r\n                   categories.map((category,index)=>{\r\n                        return <GifGrid \r\n                        key={index}\r\n                        category={category} \r\n                        />\r\n                   })\r\n                }\r\n                \r\n            </ol>\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}